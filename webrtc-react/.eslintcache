[{"/Users/wiktorflis/code/webrtc_lectures/webrtc-react/src/App.js":"1","/Users/wiktorflis/code/webrtc_lectures/webrtc-react/src/socket.js":"2","/Users/wiktorflis/code/webrtc_lectures/webrtc-react/src/Home.js":"3","/Users/wiktorflis/code/webrtc_lectures/webrtc-react/src/Broadcast.js":"4"},{"size":280,"mtime":1606743914112,"results":"5","hashOfConfig":"6"},{"size":308,"mtime":1606743854329,"results":"7","hashOfConfig":"6"},{"size":1749,"mtime":1606743587265,"results":"8","hashOfConfig":"6"},{"size":139,"mtime":1606741516615,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"bw7nr5",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"13"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/wiktorflis/code/webrtc_lectures/webrtc-react/src/App.js",["21","22","23","24","25"],"import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './Home'\nimport Broadcast from './Broadcast'\n\nfunction App() {\n  return (\n    <div>\n      <h1>Welcome to kurwa</h1>\n      <Home/>\n    </div>\n    \n  );\n}\n\nexport default App;\n",["26","27"],"/Users/wiktorflis/code/webrtc_lectures/webrtc-react/src/socket.js",[],"/Users/wiktorflis/code/webrtc_lectures/webrtc-react/src/Home.js",["28","29","30"],"import {useState, useRef, useEffect} from 'react'\nimport {socket, config} from './socket'\n\n\nconst Home = () => {\n    const peerConnection = useRef()\n    const videoRef = useRef(null)\n\n    useEffect( () => {\n        socket.on(\"offer\", (id, description) => {\n            peerConnection = new RTCPeerConnection(config);\n            peerConnection\n              .current\n              .setRemoteDescription(description)\n              .then(() => peerConnection.createAnswer())\n              .then(sdp => peerConnection.setLocalDescription(sdp))\n              .then(() => {\n                socket.emit(\"answer\", id, peerConnection.localDescription);\n              });\n            peerConnection.current.ontrack = event => {\n                videoRef.srcObject = event.streams[0];\n            };\n            peerConnection.current.onicecandidate = event => {\n              if (event.candidate) {\n                socket.emit(\"candidate\", id, event.candidate);\n              }\n            };\n          });\n          \n          \n          socket.on(\"candidate\", (id, candidate) => {\n            peerConnection\n              .current\n              .addIceCandidate(new RTCIceCandidate(candidate))\n              .catch(e => console.error(e));\n          });\n          \n          socket.on(\"connect\", () => {\n            socket.emit(\"watcher\");\n          });\n          \n          socket.on(\"broadcaster\", () => {\n            socket.emit(\"watcher\");\n          });\n          \n          socket.on(\"disconnectPeer\", () => {\n            peerConnection.current.close();\n          });\n\n          return () => {\n              socket.close()\n          }\n\n    } , [])\n\n\n    return(       \n        <video id=\"videoRef\" ref={videoRef} autoPlay />\n    )\n}\n\nexport default Home","/Users/wiktorflis/code/webrtc_lectures/webrtc-react/src/Broadcast.js",["31","32","33","34"],{"ruleId":"35","severity":1,"message":"36","line":2,"column":20,"nodeType":"37","messageId":"38","endLine":2,"endColumn":26},{"ruleId":"35","severity":1,"message":"39","line":3,"column":3,"nodeType":"37","messageId":"38","endLine":3,"endColumn":9},{"ruleId":"35","severity":1,"message":"40","line":4,"column":3,"nodeType":"37","messageId":"38","endLine":4,"endColumn":8},{"ruleId":"35","severity":1,"message":"41","line":5,"column":3,"nodeType":"37","messageId":"38","endLine":5,"endColumn":7},{"ruleId":"35","severity":1,"message":"42","line":8,"column":8,"nodeType":"37","messageId":"38","endLine":8,"endColumn":17},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"35","severity":1,"message":"47","line":1,"column":9,"nodeType":"37","messageId":"38","endLine":1,"endColumn":17},{"ruleId":"48","severity":1,"message":"49","line":11,"column":13,"nodeType":"37","messageId":"50","endLine":11,"endColumn":27},{"ruleId":"51","severity":1,"message":"52","line":11,"column":30,"nodeType":"53","endLine":11,"endColumn":59},{"ruleId":"35","severity":1,"message":"47","line":1,"column":9,"nodeType":"37","messageId":"38","endLine":1,"endColumn":17},{"ruleId":"35","severity":1,"message":"54","line":1,"column":19,"nodeType":"37","messageId":"38","endLine":1,"endColumn":25},{"ruleId":"35","severity":1,"message":"55","line":1,"column":27,"nodeType":"37","messageId":"38","endLine":1,"endColumn":36},{"ruleId":"35","severity":1,"message":"56","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":10},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Broadcast' is defined but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"'useState' is defined but never used.","no-const-assign","'peerConnection' is constant.","const","react-hooks/exhaustive-deps","Assignments to the 'peerConnection' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","'useRef' is defined but never used.","'useEffect' is defined but never used.","'io' is defined but never used.","no-global-assign","no-unsafe-negation"]